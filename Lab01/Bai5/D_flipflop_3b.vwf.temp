/* Simulator = Quartus II Simulator */
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Clock_3bit")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("D_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Qa_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Qa_not_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Qb_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Qb_not_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Qc_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Qc_not_3b")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("Clock_3bit")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("D_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1.029;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.867;
		LEVEL 1 FOR 1.772;
		LEVEL 0 FOR 4.662;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 9.972;
		LEVEL 1 FOR 5.3;
		LEVEL 0 FOR 3.066;
		LEVEL 1 FOR 2.003;
		LEVEL 0 FOR 6.8;
		LEVEL 1 FOR 4.253;
		LEVEL 0 FOR 5.9;
		LEVEL 1 FOR 1.044;
		LEVEL 0 FOR 0.024;
		LEVEL 1 FOR 2.3;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 2.7;
			LEVEL 1 FOR 2.3;
		}
		LEVEL 0 FOR 2.676;
		LEVEL 1 FOR 0.025;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 3.05;
		LEVEL 1 FOR 1.925;
		LEVEL 0 FOR 0.61;
		LEVEL 1 FOR 1.633;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.7;
			LEVEL 1 FOR 1.633;
		}
		LEVEL 0 FOR 3.338;
		LEVEL 1 FOR 2.533;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.133;
			LEVEL 1 FOR 2.533;
		}
		LEVEL 0 FOR 2.122;
		LEVEL 1 FOR 1.966;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.367;
			LEVEL 1 FOR 1.966;
		}
		LEVEL 0 FOR 11.443;
		LEVEL 1 FOR 8.8;
		LEVEL 0 FOR 3.569;
		LEVEL 1 FOR 3.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.666;
		}
		LEVEL 0 FOR 0.324;
		LEVEL 1 FOR 4.636;
		LEVEL 0 FOR 8.2;
		LEVEL 1 FOR 10.586;
		LEVEL 0 FOR 5.2;
		LEVEL 1 FOR 1.378;
		LEVEL 0 FOR 0.883;
		LEVEL 1 FOR 1.499;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.834;
			LEVEL 1 FOR 1.499;
		}
		LEVEL 0 FOR 0.952;
		LEVEL 1 FOR 7.801;
		LEVEL 0 FOR 10.6;
		LEVEL 1 FOR 1.599;
		LEVEL 0 FOR 2.943;
		LEVEL 1 FOR 1.8;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.2;
			LEVEL 1 FOR 1.8;
		}
		LEVEL 0 FOR 1.212;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.8;
			LEVEL 1 FOR 3.2;
		}
		LEVEL 0 FOR 7.19;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 11.655;
		LEVEL 1 FOR 2.768;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.667;
			LEVEL 1 FOR 2.999;
		}
		LEVEL 0 FOR 3.667;
		LEVEL 1 FOR 1.613;
		LEVEL 0 FOR 1.767;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 1.767;
		LEVEL 1 FOR 0.187;
		LEVEL 0 FOR 0.295;
		LEVEL 1 FOR 1.55;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 6.703;
		LEVEL 1 FOR 7.2;
		LEVEL 0 FOR 13.505;
		LEVEL 1 FOR 9.6;
		LEVEL 0 FOR 7.04;
		LEVEL 1 FOR 1.233;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.1;
			LEVEL 1 FOR 1.233;
		}
		LEVEL 0 FOR 5.867;
		LEVEL 1 FOR 3.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.5;
			LEVEL 1 FOR 3.5;
		}
		LEVEL 0 FOR 2.009;
		LEVEL 1 FOR 2.799;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.867;
			LEVEL 1 FOR 2.799;
		}
		LEVEL 0 FOR 3.701;
		LEVEL 1 FOR 0.07;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.467;
			LEVEL 1 FOR 2.199;
		}
		LEVEL 0 FOR 4.467;
		LEVEL 1 FOR 4.614;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 2.85;
		LEVEL 0 FOR 2.15;
		LEVEL 1 FOR 0.367;
		LEVEL 0 FOR 1.978;
		LEVEL 1 FOR 2.466;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.2;
			LEVEL 1 FOR 2.466;
		}
		LEVEL 0 FOR 5.243;
		LEVEL 1 FOR 3.2;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.8;
			LEVEL 1 FOR 3.2;
		}
		LEVEL 0 FOR 6.848;
		LEVEL 1 FOR 3.7;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.3;
			LEVEL 1 FOR 3.7;
		}
		LEVEL 0 FOR 3.819;
		LEVEL 1 FOR 1.333;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.0;
			LEVEL 1 FOR 1.333;
		}
		LEVEL 0 FOR 1.415;
		LEVEL 1 FOR 0.019;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 3.05;
		LEVEL 1 FOR 1.931;
		LEVEL 0 FOR 3.114;
		LEVEL 1 FOR 7.0;
		LEVEL 0 FOR 12.491;
		LEVEL 1 FOR 1.85;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.15;
			LEVEL 1 FOR 1.85;
		}
		LEVEL 0 FOR 5.915;
		LEVEL 1 FOR 4.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 5.5;
			LEVEL 1 FOR 4.5;
		}
		LEVEL 0 FOR 10.209;
		LEVEL 1 FOR 9.8;
		LEVEL 0 FOR 2.977;
		LEVEL 1 FOR 1.9;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.1;
			LEVEL 1 FOR 1.9;
		}
		LEVEL 0 FOR 0.244;
		LEVEL 1 FOR 2.584;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.8;
			LEVEL 1 FOR 2.866;
		}
		LEVEL 0 FOR 3.8;
		LEVEL 1 FOR 0.989;
		LEVEL 0 FOR 3.45;
		LEVEL 1 FOR 1.55;
		LEVEL 0 FOR 3.45;
		LEVEL 1 FOR 3.797;
		LEVEL 0 FOR 6.5;
		LEVEL 1 FOR 0.548;
		LEVEL 0 FOR 1.645;
		LEVEL 1 FOR 1.85;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.15;
			LEVEL 1 FOR 1.85;
		}
		LEVEL 0 FOR 1.505;
		LEVEL 1 FOR 5.642;
		LEVEL 0 FOR 4.0;
		LEVEL 1 FOR 0.358;
		LEVEL 0 FOR 1.17;
		LEVEL 1 FOR 1.95;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.05;
			LEVEL 1 FOR 1.95;
		}
		LEVEL 0 FOR 3.303;
		LEVEL 1 FOR 4.5;
		LEVEL 0 FOR 5.984;
		LEVEL 1 FOR 3.133;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.533;
			LEVEL 1 FOR 3.133;
		}
		LEVEL 0 FOR 2.552;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 7.439;
		LEVEL 1 FOR 3.4;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.6;
			LEVEL 1 FOR 3.4;
		}
		LEVEL 0 FOR 5.051;
		LEVEL 1 FOR 3.666;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.0;
			LEVEL 1 FOR 3.666;
		}
		LEVEL 0 FOR 1.288;
		LEVEL 1 FOR 0.633;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 3.45;
			LEVEL 1 FOR 1.55;
		}
		LEVEL 0 FOR 3.45;
		LEVEL 1 FOR 6.133;
		LEVEL 0 FOR 4.5;
		LEVEL 1 FOR 0.284;
		LEVEL 0 FOR 0.47;
		LEVEL 1 FOR 3.5;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 6.5;
			LEVEL 1 FOR 3.5;
		}
		LEVEL 0 FOR 6.03;
		LEVEL 1 FOR 1.084;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 4.067;
			LEVEL 1 FOR 2.599;
		}
		LEVEL 0 FOR 4.067;
		LEVEL 1 FOR 1.517;
		LEVEL 0 FOR 1.308;
		LEVEL 1 FOR 1.566;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 1.767;
			LEVEL 1 FOR 1.566;
		}
		LEVEL 0 FOR 0.46;
		LEVEL 1 FOR 1.806;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 4.283;
		LEVEL 0 FOR 4.667;
		LEVEL 1 FOR 1.999;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4.667;
			LEVEL 1 FOR 1.999;
		}
		LEVEL 0 FOR 4.667;
		LEVEL 1 FOR 3.376;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 4.9;
		LEVEL 0 FOR 5.1;
		LEVEL 1 FOR 2.336;
		LEVEL 0 FOR 8.713;
		LEVEL 1 FOR 10.8;
		LEVEL 0 FOR 5.855;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 0.032;
		LEVEL 1 FOR 2.947;
		LEVEL 0 FOR 6.7;
		LEVEL 1 FOR 1.066;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 4.6;
		LEVEL 0 FOR 5.4;
		LEVEL 1 FOR 3.887;
		LEVEL 0 FOR 2.153;
		LEVEL 1 FOR 2.933;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 3.733;
			LEVEL 1 FOR 2.933;
		}
		LEVEL 0 FOR 1.582;
		LEVEL 1 FOR 0.434;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2.334;
			LEVEL 1 FOR 0.999;
		}
		LEVEL 0 FOR 2.334;
		LEVEL 1 FOR 1.173;
		LEVEL 0 FOR 1.734;
		LEVEL 1 FOR 1.599;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 1.734;
			LEVEL 1 FOR 1.599;
		}
		LEVEL 0 FOR 1.734;
		LEVEL 1 FOR 3.171;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 4.4;
		LEVEL 0 FOR 5.6;
		LEVEL 1 FOR 2.222;
		LEVEL 0 FOR 4.342;
		LEVEL 1 FOR 4.8;
		LEVEL 0 FOR 0.858;
	}
}

TRANSITION_LIST("Qa_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Qa_not_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Qb_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Qb_not_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Qc_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("Qc_not_3b")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clock_3bit";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "D_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qa_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qa_not_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qb_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qb_not_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qc_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Qc_not_3b";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
